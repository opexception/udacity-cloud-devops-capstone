---

- name: "update apt packages."
  become: yes
  apt:
    update_cache: yes

- name: "upgrade packages"
  become: yes
  apt:
    upgrade: yes

- name: remove dependencies that are no longer required
  become: yes
  apt:
    autoremove: yes

- name: Install dependencies
  become: yes
  apt:
    name: ["apt-transport-https", "ca-certificates", "curl", "gnupg", "lsb-release"]
    state: latest
    install_recommends: yes

- name: Add Docker GPG apt Key
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  become: yes
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  become: yes
  apt: 
    update_cache: yes 
    name: ["docker-ce"]
    state: latest
    install_recommends: yes

- name: "Start Docker Service"
  ansible.builtin.service:
    name: docker
    state: started

# - name: Pull Docker image
#   docker_image:
#     name: "{{ dockerimage }}"
#     source: pull

# - name: Create container
#   docker_container:
#     name: "{{ containername }}"
#     image: "{{ dockerimage }}"
#     published_ports: [8000:8000]
#     state: present

- name: Add user ubuntu to docker group
  become: yes
  user:
    name: ubuntu
    group: docker
    append: yes

- name: download and install minikube
  become: yes
  shell: |
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    install minikube-linux-amd64 /usr/local/bin/minikube

- name: start minikube
  # become: yes
  shell: |
    minikube start --driver=docker

# - name: Download and install kubectl
#   become: yes
#   shell: |
#     minikube kubectl -- get po -A

- name: download and install kubectl
  become: yes
  shell: |
    curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    install kubectl /usr/local/bin/kubectl

- name: Deploy docker container
  #become: yes
  shell: |
    kubectl create deployment capstone-hello-world --image={{ dockerimage }}

- name: Expose docker app
  #become: yes
  shell: |
    # kubectl expose deployment capstone-hello-world --port=8000 --name=capstone-hello-world-app
    running=0
    firstcheck=0
    while [ $running -eq 0 ]
        do
            if $(kubectl get pods | grep 'capstone-hello-world' | grep -q Running)
                then 
                    echo -e "\n...Found running pod"
                    running=1
                else
                    if [ $firstcheck -eq 0 ]
                        then
                            echo -n "Pod not ready yet."
                            firstcheck=1
                        else
                            echo -n "."
                    fi
                    sleep 1
            fi
        done
    kubectl expose deployment capstone-hello-world --type=NodePort --port=8000

# - name: Setup minikube service
#   shell: |
#     minikube service capstone-hello-world

- name: Setup k8s port forward for app
  #become: yes
  shell: |
    # sleep 120
    running=0
    firstcheck=0
    while [ $running -eq 0 ]
        do
            if $(kubectl get pods | grep 'capstone-hello-world' | grep -q Running)
                then 
                    echo -e "\n...Found running pod"
                    running=1
                else
                    if [ $firstcheck -eq 0 ]
                        then
                            echo -n "Pod not ready yet."
                            firstcheck=1
                        else
                            echo -n "."
                    fi
                    sleep 1
            fi
        done
    nohup kubectl port-forward --address 0.0.0.0 service/capstone-hello-world-app 8000:8000 > /dev/null &

- name: Verify deployment rolled out successfully
  shell: |
    kubectl rollout status deployment/capstone-hello-world

- name: Checking things are working before moving on
  shell: |
    curl http://localhost:8000